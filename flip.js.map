{"version":3,"file":"flip.js","sources":["../src/utils.js","../src/element-helper.js","../src/flipper.js","../src/index.js"],"sourcesContent":["export function snakeToCamel(str) {\n  return str.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nexport function nextFrame(fn) {\n  // Twice because of firefox\n  requestAnimationFrame(() => requestAnimationFrame(fn));\n}\n","import { snakeToCamel } from './utils';\n\nexport default class ElementHelper {\n  constructor(element) {\n    this.element = element;\n  }\n\n  getStyle(styleProp) {\n    return window.getComputedStyle(this.element).getPropertyValue(styleProp);\n  }\n\n  getStyles(styleProps) {\n    return styleProps.map((prop) => this.getStyle(this.element, prop));\n  }\n\n  setStyle(styleProp, value) {\n    this.element.style[snakeToCamel(styleProp)] = value;\n  }\n\n  addClass(clazz) {\n    this.element.classList.add(clazz);\n  }\n\n  addEventListener(eventName, cb) {\n    this.element.addEventListener(eventName, cb);\n  }\n\n  removeEventListener(eventName, cb) {\n    this.element.removeEventListener(eventName, cb);\n  }\n\n  measure(otherPropsToFlip) {\n    return {\n      rect: this.element.getBoundingClientRect(),\n      opacity: this.getStyle('opacity'),\n      others: this.getStyles(otherPropsToFlip),\n    };\n  }\n\n  static getTransition(properties, transitionDuration, transitionTimingFunction) {\n    return properties\n      .map((prop) => `${prop} ${transitionDuration} ${transitionTimingFunction}`)\n      .join(',');\n  }\n\n  static getTransform(translateX, translateY, scaleX, scaleY) {\n    const transforms = [];\n    if (translateX || translateY) transforms.push(`translate(${translateX}px,${translateY}px)`);\n    if (scaleX !== 1 || scaleY !== 1) transforms.push(`scale(${scaleX},${scaleY})`);\n    return transforms.join(' ');\n  }\n}\n","import ElementHelper from './element-helper';\n\nexport default class Flipper {\n  constructor(element, toClass, otherPropsToFlip) {\n    this.helper = new ElementHelper(element);\n    this.toClass = toClass;\n    this.otherPropsToFlip = otherPropsToFlip ? [].concat(otherPropsToFlip) : [];\n  }\n\n  firstLastInvert() {\n    // first\n    const first = this.helper.measure(this.otherPropsToFlip);\n\n    this.helper.addClass(this.toClass);\n\n    // last\n    const last = this.helper.measure(this.otherPropsToFlip);\n\n    // invert\n    this.inverted = this.invert(first, last, this.otherPropsToFlip);\n  }\n\n  play(transitionDuration, transitionTimingFunction) {\n    return new Promise((resolve) => {\n      // For starters, lets check if we actually have anything to transition\n      const transitionProps = [];\n      if (this.inverted.hasTransformChanged) transitionProps.push('transform');\n      if (this.inverted.hasOpacityChanged) transitionProps.push('opacity');\n      Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.inverted, (prop) =>\n        transitionProps.push(prop),\n      );\n      if (!transitionProps.length) {\n        resolve();\n        return;\n      }\n\n      // Set the transition property to enable...well...the transition\n      this.helper.setStyle(\n        'transition',\n        ElementHelper.getTransition(transitionProps, transitionDuration, transitionTimingFunction),\n      );\n\n      // Prepare cleanup and resolve after the transition\n      const transitionEndCallback = () => {\n        this.helper.removeEventListener('transitionend', transitionEndCallback);\n        this.helper.setStyle('transition', '');\n        resolve();\n      };\n      this.helper.addEventListener('transitionend', transitionEndCallback);\n\n      // Remove transform and opacity to trigger the transition towards the css class\n      if (this.inverted.hasTransformChanged) this.helper.setStyle('transform', '');\n      if (this.inverted.hasOpacityChanged) this.helper.setStyle('opacity', '');\n      Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.inverted, (prop) =>\n        this.helper.setStyle(prop, ''),\n      );\n    });\n  }\n\n  invert(first, last, otherPropsToFlip) {\n    // Calculate\n    const inverted = {\n      translateX: (first.rect.left + first.rect.right) / 2 - (last.rect.left + last.rect.right) / 2,\n      translateY: (first.rect.top + first.rect.bottom) / 2 - (last.rect.top + last.rect.bottom) / 2,\n      scaleX: first.rect.width / last.rect.width,\n      scaleY: first.rect.height / last.rect.height,\n      hasOpacityChanged: first.opacity !== last.opacity,\n      opacity: first.opacity,\n      hasOtherPropsToFlipChanged: first.others.map(\n        (firstOther, index) => firstOther !== last.others[index],\n      ),\n      otherPropsToFlip: first.others,\n    };\n    inverted.transform = ElementHelper.getTransform(\n      inverted.translateX,\n      inverted.translateY,\n      inverted.scaleX,\n      inverted.scaleY,\n    );\n    inverted.hasTransformChanged = !!inverted.transform;\n\n    // Invert\n    if (inverted.hasTransformChanged) this.helper.setStyle('transform', inverted.transform);\n    if (inverted.hasOpacityChanged) this.helper.setStyle('opacity', inverted.opacity);\n    Flipper.forEachPropThatChanged(otherPropsToFlip, inverted, (prop, index) =>\n      this.helper.setStyle(prop, inverted.otherPropsToFlip[index]),\n    );\n\n    // return info about what has changed\n    return inverted;\n  }\n\n  static equals(first, second) {\n    return first.helper.element === second.helper.element && first.toClass === second.toClass;\n  }\n\n  static forEachPropThatChanged(props, inverted, actionFn) {\n    props.forEach((p, index) => {\n      if (inverted.hasOtherPropsToFlipChanged[index]) actionFn(p, index);\n    });\n  }\n}\n","import Flipper from './flipper';\nimport { nextFrame } from './utils';\n\n/**\n * A simple an small implementation of Paul Lewis' Flip animation principle.\n */\nclass Flip {\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * Set the properties of the transition\n   * @param {String} duration as set in CSS (default is '375ms')\n   * @param {String} timingFunction as set in CSS (default is 'cubic-bezier(0.4, 0.0, 0.2, 1)')\n   * @returns {Flip} the instance of Flip\n   */\n  withTransition(duration = '375ms', timingFunction = 'cubic-bezier(0.4, 0.0, 0.2, 1)') {\n    this.transitionDuration = duration || this.transitionDuration;\n    this.transitionTimingFunction = timingFunction || this.transitionTimingFunction;\n    return this;\n  }\n\n  /**\n   * Set the element(s) that will transition, and the CSS to which it will transition to.\n   * @param {(HTMLElement|Array<HTMLElement>)} elements that will transition\n   * @param {String} toClass CSS class to which the element will transition to\n   * @param {(String|Array<String>)} otherPropsToFlip Optionnaly, the additionnal CSS properties\n   * that should transition (other than 'opacity' and 'transform', in snake case)\n   * @returns {Flip} the instance of Flip\n   * @throws {Error} if either 'element' or 'toClass' in not defined\n   */\n  withClass(elements, toClass, otherPropsToFlip = []) {\n    if (!elements) throw new Error('elements should be defined');\n    if (!toClass) throw new Error('toClass should be defined');\n    if (this.ongoing) console.warn('withClass(): transition already ongoing');\n    const elementArray = [].concat(elements);\n    let newFlipper;\n    elementArray.forEach((element) => {\n      newFlipper = new Flipper(element, toClass, otherPropsToFlip);\n      if (!this.flippers.some((currentFlipper) => Flipper.equals(currentFlipper, newFlipper))) {\n        this.flippers.push(newFlipper);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Triggers the transition.\n   * @returns {Promise} that resolves after the transition ended.\n   */\n  go() {\n    return new Promise((resolve) => {\n      this.ongoing = true;\n      // fli\n      this.flippers.forEach((flipper) => flipper.firstLastInvert());\n      // p\n      nextFrame(() => {\n        const transitionPromises = this.flippers.map((flipper) =>\n          flipper.play(this.transitionDuration, this.transitionTimingFunction),\n        );\n        Promise.all(transitionPromises).then(() => {\n          this.ongoing = false;\n          this.reset();\n          resolve();\n        });\n      });\n    });\n  }\n\n  /**\n   * Resets everything (element(s) to transition, as well as transition settings).\n   * @returns {Flip} the instance of Flip\n   */\n  reset() {\n    if (this.ongoing) console.warn('reset(): transition still ongoing');\n    this.flippers = [];\n    this.withTransition();\n    return this;\n  }\n}\n\nexport default Flip;\n"],"names":["snakeToCamel","str","replace","match","toUpperCase","nextFrame","fn","requestAnimationFrame","ElementHelper","element","styleProp","window","getComputedStyle","getPropertyValue","styleProps","map","prop","getStyle","value","style","clazz","classList","add","eventName","cb","addEventListener","removeEventListener","otherPropsToFlip","rect","getBoundingClientRect","opacity","others","getStyles","properties","transitionDuration","transitionTimingFunction","join","translateX","translateY","scaleX","scaleY","transforms","push","Flipper","toClass","helper","concat","first","measure","addClass","last","inverted","invert","Promise","resolve","transitionProps","hasTransformChanged","hasOpacityChanged","forEachPropThatChanged","length","setStyle","getTransition","transitionEndCallback","left","right","top","bottom","width","height","hasOtherPropsToFlipChanged","firstOther","index","transform","getTransform","second","props","actionFn","forEach","p","Flip","reset","duration","timingFunction","elements","Error","ongoing","console","warn","elementArray","newFlipper","flippers","some","currentFlipper","equals","flipper","firstLastInvert","transitionPromises","play","all","then","withTransition"],"mappings":"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"}